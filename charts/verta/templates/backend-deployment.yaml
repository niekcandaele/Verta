{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "verta.fullname" . }}-backend
  labels:
    {{- include "verta.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "verta.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "verta.labels" . | nindent 8 }}
        app.kubernetes.io/component: backend
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "verta.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers.migrations.enabled }}
      initContainers:
        - name: migrations
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.initContainers.migrations.image.repository }}:{{ .Values.initContainers.migrations.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.initContainers.migrations.image.pullPolicy }}
          command: ["/bin/sh", "-c", "npm run migrate:latest"]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: database-url
            - name: NODE_ENV
              value: production
            - name: ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: admin-api-key
            - name: DISCORD_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: discord-bot-token
            - name: ML_SERVICE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: admin-api-key
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      {{- end }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.backend.env }}
            - name: {{ $key }}
              value: {{ tpl ($value | toString) $ | quote }}
            {{- end }}
            # Secrets
            - name: ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: admin-api-key
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: database-url
            - name: DISCORD_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: discord-bot-token
            - name: OPENROUTER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: openrouter-api-key
            - name: TEST_DISCORD_GUILD_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: test-discord-guild-id
            - name: TEST_DISCORD_TENANT_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: test-discord-tenant-name
            - name: TEST_DISCORD_TENANT_SLUG
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: test-discord-tenant-slug
            - name: ML_SERVICE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "verta.fullname" . }}
                  key: admin-api-key
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /home/node/.cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}